TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 3.5
  acc_lim_theta: 10

  max_vel_x: 0.5
  min_vel_x: 0.0

  max_vel_theta: 5.0
  min_vel_theta: -5.0
  min_in_place_vel_theta: 2

  holonomic_robot: true
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 1
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 20
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.001 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 1  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: .64 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: false #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1

DWAPlannerROS:
  acc_lim_x: 50
  acc_lim_y: 50
  acc_lim_th: 50
  max_vel_trans: 0.8
  min_vel_trans: -.5
  max_vel_x: 0.8 # was 0.6
  min_vel_x: 0.0 # was 0.0
  max_vel_y: 0.1
  min_vel_y: -0.05
  max_vel_theta: 2
  min_vel_theta: 0.2
  yaw_goal_tolerance: 0.0349066 #2Deg
  xy_goal_tolerance: 0.05
  latch_xy_goal_tolerance: false
  sim_time: 1.5 # was 3.5
  sim_granularity: 0.025
  vx_samples: 20 #15 changed to 20
  vy_samples: 0
  vtheta_samples: 40 # 20 changed to 40
  penalize_negative_x: true
  controller_frequency: 5
  path_distance_bias: 32 # is the weight for how much the local planner should stay close to the global path
  goal_distance_bias: 20 # is the weight for how much the robot should attempt to reach the local goal
  occdist_scale: 0.02 # is the weight for how much the robot should attempt to avoid ob-stacles.
  forward_point_distance: 0.325
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.1
